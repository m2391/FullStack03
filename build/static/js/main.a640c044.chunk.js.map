{"version":3,"sources":["components/AddPerson.js","components/FilterPerson.js","components/Person.js","components/Persons.js","services/personDB.js","components/Notification.js","App.js","index.js"],"names":["NewPerson","props","onSubmit","addPerson","value","newName","onChange","handleNameChange","newNumber","handleNumberChange","type","FilterPerson","newSearch","handleSearchChange","Person","deletePerson","name","number","onClick","Persons","persons","filter","person","toUpperCase","includes","map","handleDeletePerson","id","baseUrl","axios","get","then","response","data","newObject","post","put","delete","Notification","message","className","App","useState","setPersons","setNewName","setNewNumber","setNewSearch","errorMessage","setErrorMessage","useEffect","personDB","event","target","preventDefault","personObject","Math","floor","random","length","window","confirm","previousPerson","find","n","updatedPerson","catch","error","console","log","concat","setTimeout","newPerson","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a640c044.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst NewPerson = (props) => {\r\n    return (\r\n        <form onSubmit={props.addPerson}>\r\n        Name:\r\n        <input\r\n            value={props.newName}\r\n            onChange={props.handleNameChange} />\r\n            <br />\r\n        Number:\r\n        <input\r\n            value={props.newNumber}\r\n            onChange={props.handleNumberChange} />\r\n            <br />\r\n        <button type=\"submit\">Add</button>\r\n        </form> \r\n    ) \r\n}\r\n\r\nexport default NewPerson","import React from 'react'\r\n\r\nconst FilterPerson = (props) => {\r\n    return (\r\n        <form>\r\n        Search: \r\n        <input\r\n            value={props.newSearch}\r\n            onChange={props.handleSearchChange} />\r\n            <br />\r\n        </form> \r\n    ) \r\n}\r\n\r\nexport default FilterPerson","import React from 'react'\r\n\r\nconst Person = (props, deletePerson) => {\r\n    return (\r\n      <li>{props.name}  {props.number} <button onClick={props.deletePerson}>Delete</button></li>\r\n    )\r\n  }\r\n\r\n  export default Person","import React from 'react'\r\nimport Person from './Person'\r\n\r\nconst Persons = (props) => {\r\n    return (\r\n        <ul>\r\n            {props.persons.filter(person => person.name.toUpperCase().includes(props.newSearch.toUpperCase())).map(person => (\r\n            <Person key={person.id} name={person.name} number={person.number} deletePerson={props.handleDeletePerson(person.name, person.id)} /> ))}\r\n        </ul> \r\n    ) \r\n}\r\n\r\nexport default Persons","import axios from \"axios\";\r\nconst baseUrl = \"/api/persons\";\r\n\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then(response => response.data);\r\n};\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject);\r\n  return request.then(response => response.data);\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\r\n  return request.then(response => response.data);\r\n};\r\n\r\nconst deletePerson = id => {\r\n  const request = axios.delete(`${baseUrl}/${id}`);\r\n  return request.then(response => response.data);\r\n};\r\n\r\nexport default {\r\n  getAll: getAll,\r\n  create: create,\r\n  update: update,\r\n  deletePerson: deletePerson\r\n};","import React from 'react'\r\nconst Notification = ({ message }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div className=\"error\">\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default Notification;","import React, { useState, useEffect } from \"react\";\nimport NewPerson from \"./components/AddPerson\";\nimport FilterPerson from \"./components/FilterPerson\";\nimport Persons from \"./components/Persons\";\nimport personDB from \"./services/personDB\";\nimport Notification from \"./components/Notification\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [newSearch, setNewSearch] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  const handleNameChange = event => {\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = event => {\n    setNewNumber(event.target.value);\n  };\n\n  const handleSearchChange = event => {\n    setNewSearch(event.target.value);\n  };\n\n  const handleDeletePerson = (name, id) => {\n    return () => {\n      if (window.confirm(`Do you want to Delete ${name} ?`)) {\n        personDB\n          .deletePerson(id)\n          .then(() => {\n            setPersons(persons.filter(n => n.id !== id));\n            setErrorMessage(`${name} was Deleted`);\n            setNewName(\"\");\n            setNewNumber(\"\");\n          })\n          .catch(error => {\n            setPersons(persons.filter(n => n.name !== name));\n            setErrorMessage(`User ${name} has already been removed.`);\n          });\n        setTimeout(() => {\n          setErrorMessage(null);\n        }, 3000);\n      }\n    };\n  };\n\n  useEffect(() => {\n    personDB.getAll().then(response => {\n      setPersons(response);\n    });\n  }, []);\n\n  const addPerson = event => {\n    event.preventDefault();\n\n    const personObject = {\n      name: newName,\n      number: newNumber,\n      id: Math.floor(Math.random() * 101)\n    };\n\n    if (\n      persons.filter(person => person.name === personObject.name).length > 0\n    ) {\n      if (\n        window.confirm(\n          `${\n            personObject.name\n          } already added to phonebook`\n        )\n      ) {\n        const previousPerson = persons.find(n => n.name === newName);\n        personDB\n          .update(previousPerson.id, { ...previousPerson, number: newNumber })\n          .then(updatedPerson => {\n            setPersons(\n              persons.map(n => (n.name === newName ? updatedPerson : n))\n            );\n          })\n          .catch(error => {\n            console.log(error);\n            setErrorMessage(\"Uptade is completed\");\n          });\n        setPersons(persons.concat(personObject));\n        setErrorMessage(` ${personObject.name} number was changed`);\n        setNewName(\"\");\n        setNewNumber(\"\");\n        setTimeout(() => {\n          setErrorMessage(null);\n        }, 3000);\n      }\n    } else {\n      personDB\n        .create(personObject)\n        .then(newPerson => {\n          setPersons(persons.concat(newPerson));\n          setErrorMessage(` ${personObject.name} was added` );\n          setNewName(\"\");\n          setNewNumber(\"\");\n        })\n        .catch(error => {\n          setErrorMessage(`${error.response.data.error}`);\n          console.log(error.response.data);\n        });\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 3000);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={errorMessage} />\n      <FilterPerson\n        newSearch={newSearch}\n        handleSearchChange={handleSearchChange}\n      />\n      <h3>Add New</h3>\n      <NewPerson\n        newName={newName}\n        newNumber={newNumber}\n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}\n        addPerson={addPerson}\n      />\n      <h3>Numbers</h3>\n      <Persons\n        persons={persons}\n        newSearch={newSearch}\n        handleDeletePerson={handleDeletePerson}\n      />\n    </div>\n  );\n};\n\nexport default App;","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}